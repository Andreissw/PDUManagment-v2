@model IEnumerable<PDUManagment.Classes.Table>

@{
    Layout = null;
}
<h2>Заказы</h2>

<div style="display:flex; align-items:center">
    <h4>Фильтр</h4>
    <input type="text" id="myInput" onkeyup="myFunction()" placeholder="Поиск..." title="Type in a name" style="margin-left:1%; max-width: 400px; width:400px;">
</div>

<table class="table" id="myTable">
    <tr class="header">
        <th>Статус заказа</th>
        <th>Тип заказа </th>       
        <th>Заказичк </th>
        <th>Имя Заказа  </th>     
        <th>Дата создания  </th>    
        <th></th>
    </tr>

    @foreach (var item in Model)
    {
<tr>
    <td>
        @if (item.IsActive)
        {
            @Html.Label("Открытый заказ", new  { @style = "background-color:lightgreen"})
        }
        else
        {
            @Html.Label("Закрытый заказ", new { @style = "background-color:lightcoral" })
        }
    </td>
    <td>
        @Html.DisplayFor(modelItem => item.TypeClient)
    </td>
    <td>
        @Html.DisplayFor(modelItem => item.NameClient)
    </td>
    <td>
        @Html.DisplayFor(modelItem => item.Name)
    </td>
    <td>
        @Html.DisplayFor(modelItem => item.DateCreate)
    </td>

    <td style="border-left:3px dashed black">
        @if (Session["Service"].ToString() == "15")
        {
            @Html.ActionLink("Редактировать", "Index", "Edit",new { id = item.ID, mode = "Edit" }, new {  @class = "btn btn-success", style = "background-color:gold; color:black" })
        }

        @Html.ActionLink("Открыть", "Index", "Edit", new { id = item.ID, mode = "Open" },  new { @class = "btn btn-success", style = "background-color:cornsilk; color:black" })
    </td>
</tr>
    }

</table>

<style>
    thead {
        align-items: center;
        position: sticky;
        top: 0px;
        border: 5px solid black;
    }

    th {
        align-content: center;
        text-align: center;
        background-color: gold;
        border-top: 2px solid black;
    }

    td {
        width: 10%;
        overflow: visible;
        align-items: center;
        text-align: center;
        padding: 2%;
        margin: 1%;
        border-bottom: 2px dotted gray;
    }

    table {
        font-size: 14px;
        background-color: antiquewhite;
    }

    tr:nth-child(odd) {
        background-color: #EAF2D3;
    }
</style>

<script>
    const myFunction = () => {
        const trs = document.querySelectorAll('#myTable tr:not(.header)')
        const filter = document.querySelector('#myInput').value
        const regex = new RegExp(filter, 'i')
        const isFoundInTds = td => regex.test(td.innerHTML)
        const isFound = childrenArr => childrenArr.some(isFoundInTds)
        const setTrStyleDisplay = ({ style, children }) => {
            style.display = isFound([
                ...children // <-- All columns
            ]) ? '' : 'none'
        }

        trs.forEach(setTrStyleDisplay)
    }
</script>
